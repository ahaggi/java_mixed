package no.hib.dat101.utsyn;

import java.util.List;
import java.util.Scanner;

import no.hib.dat101.*;



/**
 * @author Peter Boer, Daniel Moberg og Abdella Haji 
 *
 */

public class Tekstgrensesnitt {
	
Database db =new Database();
	
	Scanner tastatur = new Scanner(System.in);
	
	/******************************Spill-Meny metoder*******************************************/
	

	/**
	 * Starte et nytt spill.
	 */
	public void nySpill() {
		
		if (db.hentFraDb()!=null) {
			System.out.println("noe noe det er  allerede en brett og ruter (som er registerert til spill nr 1 uansett antall spill på DB) som er ferdig laget tast inn  2 eller noe noe");
			return;
		}
		Integer antallspillere;
		
		do {
		System.out.println("Antall spillere (2-4):");
		antallspillere = tastatur.nextInt();
		tastatur.nextLine();
		}while (antallspillere < 2 || antallspillere > 4);
		
		Spill spill = new Spill(antallspillere);
		db.setSpill(spill);
		spill.startSpill();
		db.persist();

	}

	/**
	 * Start ett ny spill med ett eksisterende brett.
	 */
	public void hentBrett() {
		
		
		if (db.hentFraDb()==null) {
			System.out.println("noe noe DB er tom tast inn for å lage ett nytt spill .... noe noe");
			return;
		}
		Integer antallspillere;
		
		
		do {
		System.out.println("Antall spillere (2-4):");
		antallspillere = tastatur.nextInt();
		tastatur.nextLine();
		}while (antallspillere < 2 || antallspillere > 4);
		
		
		Spill spill = db.hentFraDb();
		Brett brett = spill.getBrett();
		List<Brikke> brikke = spill.getBrikker();
		
		Spill nyttSpill = new Spill(brett, brikke, antallspillere);
		db.setSpill(nyttSpill);
		nyttSpill.startSpill();
		db.persist();

		}
	
	/**
	 * Persister Spill og luker kobling til database.
	 */
	public void close() {
		db.persist();
		db.close();
	}
}
	

